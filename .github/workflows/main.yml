name: build-and-deploy

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: salvatierraj/gestura-back

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=ref,event=tag

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: salvatierraj
          password: "7@21sd08VJ"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ZeroTier
        run: |
          curl -s https://install.zerotier.com | sudo bash
          sudo zerotier-cli join ${{ secrets.ZT_NETWORK_ID }}
  
      - name: Authorize runner in ZeroTier via API
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl
          NODE_ID=$(sudo zerotier-cli info | awk '{print $3}')
          # Marca el runner como "authorized" en la red
          curl -s -X POST \
            -H "Authorization: bearer IFceQyxv04GpXEXNqh30xK6ib35MtxeJ" \
            -H "Content-Type: application/json" \
            -d '{"hidden": false, "config": {"authorized": true}}' \
            https://api.zerotier.com/api/v1/network/48d6023c46185ec2/member/$NODE_ID
          # Espera a que obtenga IP zt*
          for i in {1..20}; do ip a | grep -q "zt" && break || sleep 2; done
          ip a | grep zt || (echo "No se ve interfaz ZeroTier" && exit 1)
  
      - name: Debug ZeroTier IPs (optional)
        run: |
          ip -br a
          ip route
  
      - name: Deploy over SSH via ZeroTier
        uses: appleboy/ssh-action@v1
        with:
          host: 172.28.86.5           # IP ZeroTier de tu servidor
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            APP_DIR=/opt/gestura-back
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"
  
            # Login a Docker Hub usando secrets (NO hardcode)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
  
            # Traer Ãºltima imagen y levantar
            docker compose pull
            docker compose up -d --remove-orphans
  
            # Limpieza
            docker image prune -f
  
              # Limpieza
              docker image prune -f
