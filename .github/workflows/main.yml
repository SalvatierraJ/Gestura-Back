name: build-and-deploy

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: salvatierraj/gestura-back   # Docker Hub exige minúsculas

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags/labels automáticos)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=ref,event=tag

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}                  # docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}    # TU usuario de Docker Hub
          password: ${{ secrets.DOCKERHUB_TOKEN }}       # PAT (no password de cuenta)

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          authkey: ${{ secrets.TS_AUTHKEY }}
          args: "--hostname gha-deployer --timeout 2m"

      # Despliegue vía SSH clásico (llaves) a través de la red Tailscale
      - name: Deploy over SSH via Tailscale (keys)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}   # ej: ubuntu-ci.tailXXXX.ts.net o 100.x.y.z
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}     # clave privada que corresponda a authorized_keys del server
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            APP_DIR=/opt/gestura-back
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -f
